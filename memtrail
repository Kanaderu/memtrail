#!/usr/bin/env python
##########################################################################
#
# Copyright 2011 Jose Fonseca
# All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
##########################################################################/


import optparse
import os.path
import subprocess
import sys


def main():
    parser = optparse.OptionParser(
        usage="\n\t%prog [options] -- program [args] ...")
    (options, args) = parser.parse_args(sys.argv[1:])

    if not args:
        parser.error('insufficient number of arguments')

    ld_preload = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]), 'libmemtrail.so'))
    if not os.path.exists(ld_preload):
        sys.error.write('memtrail: error: %s not found\n' % ld_preload)
        sys.exit(1)

    env = os.environ.copy()
    env['LD_PRELOAD'] = ld_preload

    retcode = subprocess.call(args, env=env)
    sys.exit(retcode)


if __name__ == '__main__':
    main()
